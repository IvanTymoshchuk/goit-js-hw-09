/*
–ó–∞–≤–¥–∞–Ω–Ω—è 2 - —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É
–í–∏–∫–æ–Ω—É–π —Ü–µ –∑–∞–≤–¥–∞–Ω–Ω—è —É —Ñ–∞–π–ª–∞—Ö 02-timer.html —ñ 02-timer.js. –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Ç–∞–π–º–µ—Ä–∞, —è–∫–∏–π –∑–¥—ñ–π—Å–Ω—é—î –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –≤—ñ–¥–ª—ñ–∫ –¥–æ –ø–µ–≤–Ω–æ—ó –¥–∞—Ç–∏. –¢–∞–∫–∏–π —Ç–∞–π–º–µ—Ä –º–æ–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —É –±–ª–æ–≥–∞—Ö —Ç–∞ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞—Ö, —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –ø–æ–¥—ñ–π, –ø—ñ–¥ —á–∞—Å —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —Ç–æ—â–æ. –ü–æ–¥–∏–≤–∏—Å—è –¥–µ–º–æ-–≤—ñ–¥–µ–æ —Ä–æ–±–æ—Ç–∏ —Ç–∞–π–º–µ—Ä–∞.
–ï–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
HTML –º—ñ—Å—Ç–∏—Ç—å –≥–æ—Ç–æ–≤—É —Ä–æ–∑–º—ñ—Ç–∫—É —Ç–∞–π–º–µ—Ä–∞, –ø–æ–ª—è –≤–∏–±–æ—Ä—É –∫—ñ–Ω—Ü–µ–≤–æ—ó –¥–∞—Ç–∏ —ñ –∫–Ω–æ–ø–∫—É, –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —è–∫—É, —Ç–∞–π–º–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç–∏—Å—è. –î–æ–¥–∞–π –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É.

<input type="text" id="datetime-picker" />
<button type="button" data-start>Start</button>

<div class="timer">
  <div class="field">
    <span class="value" data-days>00</span>
    <span class="label">Days</span>
  </div>
  <div class="field">
    <span class="value" data-hours>00</span>
    <span class="label">Hours</span>
  </div>
  <div class="field">
    <span class="value" data-minutes>00</span>
    <span class="label">Minutes</span>
  </div>
  <div class="field">
    <span class="value" data-seconds>00</span>
    <span class="label">Seconds</span>
  </div>
</div>

–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ flatpickr
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É flatpickr –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –¥–æ–∑–≤–æ–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –∫—Ä–æ—Å–±—Ä–∞—É–∑–µ—Ä–Ω–æ –≤–∏–±—Ä–∞—Ç–∏ –∫—ñ–Ω—Ü–µ–≤—É –¥–∞—Ç—É —ñ —á–∞—Å –≤ –æ–¥–Ω–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É. –î–ª—è —Ç–æ–≥–æ —â–æ–± –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ CSS –∫–æ–¥ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–æ–¥–∞—Ç–∏ —â–µ –æ–¥–∏–Ω —ñ–º–ø–æ—Ä—Ç, –∫—Ä—ñ–º —Ç–æ–≥–æ, —â–æ –æ–ø–∏—Å–∞–Ω–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó.

// –û–ø–∏—Å–∞–Ω–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import flatpickr from "flatpickr";
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import "flatpickr/dist/flatpickr.min.css";

–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –æ—á—ñ–∫—É—î, —â–æ —ó—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ input[type="text"], —Ç–æ–º—É –º–∏ –¥–æ–¥–∞–ª–∏ –¥–æ HTML –¥–æ–∫—É–º–µ–Ω—Ç—É –ø–æ–ª–µ input#datetime-picker.

<input type="text" id="datetime-picker" />

–î—Ä—É–≥–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Ñ—É–Ω–∫—Ü—ñ—ó flatpickr(selector, options) –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –æ–±'—î–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤. –ú–∏ –ø—ñ–¥–≥–æ—Ç—É–≤–∞–ª–∏ –¥–ª—è —Ç–µ–±–µ –æ–±'—î–∫—Ç, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è. –†–æ–∑–±–µ—Ä–∏—Å—è, –∑–∞ —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∫–æ–∂–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó ¬´Options¬ª, —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –π–æ–≥–æ —É —Å–≤–æ—î–º—É –∫–æ–¥—ñ.

const options = {
  enableTime: true,
  time_24hr: true,
  defaultDate: new Date(),
  minuteIncrement: 1,
  onClose(selectedDates) {
    console.log(selectedDates[0]);
  },
};

–í–∏–±—ñ—Ä –¥–∞—Ç–∏
–ú–µ—Ç–æ–¥ onClose() –∑ –æ–±'—î–∫—Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —â–æ—Ä–∞–∑—É –ø—ñ–¥ —á–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è –µ–ª–µ–º–µ–Ω—Ç–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î flatpickr. –°–∞–º–µ —É –Ω—å–æ–º—É –≤–∞—Ä—Ç–æ –æ–±—Ä–æ–±–ª—è—Ç–∏ –¥–∞—Ç—É, –æ–±—Ä–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º. –ü–∞—Ä–∞–º–µ—Ç—Ä selectedDates - —Ü–µ –º–∞—Å–∏–≤ –æ–±—Ä–∞–Ω–∏—Ö –¥–∞—Ç, —Ç–æ–º—É –º–∏ –±–µ—Ä–µ–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç.

–Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–±—Ä–∞–≤ –¥–∞—Ç—É –≤ –º–∏–Ω—É–ª–æ–º—É, –ø–æ–∫–∞–∂–∏ window.alert() –∑ —Ç–µ–∫—Å—Ç–æ–º "Please choose a date in the future".
–Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–±—Ä–∞–≤ –≤–∞–ª—ñ–¥–Ω—É –¥–∞—Ç—É (–≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É), –∫–Ω–æ–ø–∫–∞ ¬´Start¬ª —Å—Ç–∞—î –∞–∫—Ç–∏–≤–Ω–æ—é.
–ö–Ω–æ–ø–∫–∞ ¬´Start¬ª –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—é –¥–æ—Ç–∏, –¥–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–±—Ä–∞–≤ –¥–∞—Ç—É –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É.
–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è–º –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Start¬ª –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –≤—ñ–¥–ª—ñ–∫ —á–∞—Å—É –¥–æ –æ–±—Ä–∞–Ω–æ—ó –¥–∞—Ç–∏ –∑ –º–æ–º–µ–Ω—Ç—É –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è.
–í—ñ–¥–ª—ñ–∫ —á–∞—Å—É
–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è–º –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Start¬ª —Å–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –æ–±—á–∏—Å–ª—é–≤–∞—Ç–∏ —Ä–∞–∑ –Ω–∞ —Å–µ–∫—É–Ω–¥—É, —Å–∫—ñ–ª—å–∫–∏ —á–∞—Å—É –∑–∞–ª–∏—à–∏–ª–æ—Å—å –¥–æ –≤–∫–∞–∑–∞–Ω–æ—ó –¥–∞—Ç–∏, —ñ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–∞–π–º–µ—Ä–∞, –ø–æ–∫–∞–∑—É—é—á–∏ —á–æ—Ç–∏—Ä–∏ —Ü–∏—Ñ—Ä–∏: –¥–Ω—ñ, –≥–æ–¥–∏–Ω–∏, —Ö–≤–∏–ª–∏–Ω–∏ —ñ —Å–µ–∫—É–Ω–¥–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ xx:xx:xx:xx.

–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –º–æ–∂–µ —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è –∑ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –¥–≤–æ—Ö —Ü–∏—Ñ—Ä.
–¢–∞–π–º–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω –∑—É–ø–∏–Ω—è—Ç–∏—Å—è, –∫–æ–ª–∏ –¥—ñ–π—à–æ–≤ –¥–æ –∫—ñ–Ω—Ü–µ–≤–æ—ó –¥–∞—Ç–∏, —Ç–æ–±—Ç–æ 00:00:00:00.
–ù–ï –ë–£–î–ï–ú–û –£–°–ö–õ–ê–î–ù–Æ–í–ê–¢–ò
–Ø–∫—â–æ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π, –¥–ª—è —Ç–æ–≥–æ —â–æ–± –≤–∏–±—Ä–∞—Ç–∏ –Ω–æ–≤—É –¥–∞—Ç—É —ñ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –π–æ–≥–æ - –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.

–î–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –∑–Ω–∞—á–µ–Ω—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –≥–æ—Ç–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é convertMs, –¥–µ ms - —Ä—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ –∫—ñ–Ω—Ü–µ–≤–æ—é —ñ –ø–æ—Ç–æ—á–Ω–æ—é –¥–∞—Ç–æ—é –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö.

function convertMs(ms) {
  // Number of milliseconds per unit of time
  const second = 1000;
  const minute = second * 60;
  const hour = minute * 60;
  const day = hour * 24;

  // Remaining days
  const days = Math.floor(ms / day);
  // Remaining hours
  const hours = Math.floor((ms % day) / hour);
  // Remaining minutes
  const minutes = Math.floor(((ms % day) % hour) / minute);
  // Remaining seconds
  const seconds = Math.floor((((ms % day) % hour) % minute) / second);

  return { days, hours, minutes, seconds };
}

console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}
console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}
console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}

–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É
–§—É–Ω–∫—Ü—ñ—è convertMs() –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç –∑ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–∏–º —á–∞—Å–æ–º, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è –¥–æ –∫—ñ–Ω—Ü–µ–≤–æ—ó –¥–∞—Ç–∏. –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É, —â–æ –≤–æ–Ω–∞ –Ω–µ —Ñ–æ—Ä–º–∞—Ç—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –¢–æ–±—Ç–æ, —è–∫—â–æ –∑–∞–ª–∏—à–∏–ª–æ—Å—è 4 —Ö–≤–∏–ª–∏–Ω–∏ –∞–±–æ –±—É–¥—å-—è–∫–æ—ó —ñ–Ω—à–æ—ó —Å–∫–ª–∞–¥–æ–≤–æ—ó —á–∞—Å—É, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ 4, –∞ –Ω–µ 04. –í —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ —Ç–∞–π–º–µ—Ä–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–æ–¥–∞–≤–∞—Ç–∏ 0, —è–∫—â–æ –≤ —á–∏—Å–ª—ñ –º–µ–Ω—à–µ –¥–≤–æ—Ö —Å–∏–º–≤–æ–ª—ñ–≤. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é addLeadingZero(value), —è–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –º–µ—Ç–æ–¥ padStart() —ñ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º —ñ–Ω—Ç–µ—Ñ—Ä–µ–π—Å—É —Ñ–æ—Ä–º–∞—Ç—É—î –∑–Ω–∞—á–µ–Ω–Ω—è.

–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
–£–í–ê–ì–ê
–ù–∞—Å—Ç—É–ø–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –¥–ª—è –∑–¥–∞–≤–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è, –∞–ª–µ –±—É–¥–µ —Ö–æ—Ä–æ—à–æ—é –¥–æ–¥–∞—Ç–∫–æ–≤–æ—é –ø—Ä–∞–∫—Ç–∏–∫–æ—é.

–î–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ, –∑–∞–º—ñ—Å—Ç—å window.alert(), –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É notiflix.
*/

// –û–ø–∏—Å–∞–Ω–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import flatpickr from 'flatpickr';
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import 'flatpickr/dist/flatpickr.min.css';
//
import Notiflix from 'notiflix';


const dateTimePicker = document.getElementById('datetime-picker');
const strBtn = document.querySelector('[data-start]');
const daysField = document.querySelector('[data-days]');
const hoursField = document.querySelector('[data-hours]');
const minField = document.querySelector('[data-minutes]');
const secField = document.querySelector('[data-seconds]');

let countInterval = null;
let targetDate = null;


Notiflix.Report.info(
    ' ü§üüèº Hello my Friend!',
    'Please, choose a date and click on start',
    'Okay'
  );

const upTime = () => {
  const currentDate = new Date();
  const remTime = targetDate - currentDate;

  if (remTime < 0) {
    clearInterval(countInterval);
    strBtn.disabled = true;
    dateTimePicker.disabled = false;
    Notiflix.Report.info(
      'Info',
      'Please choose a date in the future',
      'Okey'
    );
    return;
  }

  const days = Math.floor(remTime / (1000 * 60 * 60 * 24))
    .toString()
    .padStart(2, '0');
  const hours = Math.floor((remTime / (1000 * 60 * 60)) % 24)
    .toString()
    .padStart(2, '0');
  const minutes = Math.floor((remTime / 1000 / 60) % 60)
    .toString()
    .padStart(2, '0');
  const seconds = Math.floor((remTime / 1000) % 60)
    .toString()
    .padStart(2, '0');

  daysField.textContent = days;
  hoursField.textContent = hours;
  minField.textContent = minutes;
  secField.textContent = seconds;
};

const strCount = () => {
  targetDate = new Date(dateTimePicker.value);
  countInterval = setInterval(upTime, 1000);
  strBtn.disabled = true;
  dateTimePicker.disabled = true;
};

flatpickr(dateTimePicker, {
  enableTime: true,
  time_24hr: true,
  defaultDate: new Date(),
  minuteIncrement: 1,
  onClose(selectedDates) {
    const selectedDate = selectedDates[0];
    const now = new Date();
    if (selectedDate < now) {
      Notiflix.Report.failure(
        'Oppss...üßü‚Äç‚ôÇÔ∏è',
        'Please choose a date in the future',
        'Try again'
      );
      strBtn.disabled = true;
    } else {
      Notiflix.Report.success(
        'Great üòé',
        'The selected date is in the future. Click `Start` to continue',
        'Start'
      );
      strBtn.disabled = false;
    }
  },
});

strBtn.addEventListener('click', strCount);

// ------ next variant -------------------------------------------------------

// const calendar = document.querySelector('#datetime-picker');
// const startBtn = document.querySelector('[data-start-timer]');
// startBtn.disabled = true;

// Notiflix.Report.info(
//   'üëã Greeting, my Friend!',
//   'Please, choose a date and click on start',
//   'Okay'
// );

// flatpickr(calendar, {
//   enableTime: true,
//   time_24hr: true,
//   defaultDate: new Date(),
//   minuteIncrement: 1,
//   onClose(selectedDates) {
//     if (selectedDates[0].getTime() < Date.now()) {
//       Notiflix.Report.failure(
//         'ü•∫ Ooops...',
//         'Please, choose a date in the future and remember: "Knowledge rests not upon truth alone, but upon error also." - Carl Gustav Jung',
//         'Okay'
//       );
//     } else {
//       Notiflix.Report.success(
//         'ü•∞ Congratulation! Click on start!',
//         '"Do not try to become a person of success but try to become a person of value." <br/><br/>- Albert Einstein',
//         'Okay'
//       );
//       startBtn.disabled = false;
//       const setTimer = () => {
//         selectedDate = selectedDates[0].getTime();
//         timer.start();
//       };

//       startBtn.addEventListener('click', setTimer);
//     }
//   },
// });

// const timer = {
//   rootSelector: document.querySelector('.timer'),
//   start() {
//     intervalId = setInterval(() => {
//       startBtn.disabled = true;
//       calendar.disabled = true;
//       currentDate = Date.now();
//       const delta = selectedDate - currentDate;

//       if (delta <= 0) {
//         this.stop();
//         Report.info(
//           'üëè Congratulation! Timer stopped!',
//           'Please, if you want to start timer, choose a date and click on start or reload this page',
//           'Okay'
//         );
//         return;
//       }
//       const { days, hours, minutes, seconds } = this.convertMs(delta);
//       this.rootSelector.querySelector('[data-days]').textContent =
//         this.addLeadingZero(days);
//       this.rootSelector.querySelector('[data-hours]').textContent =
//         this.addLeadingZero(hours);
//       this.rootSelector.querySelector('[data-minutes]').textContent =
//         this.addLeadingZero(minutes);
//       this.rootSelector.querySelector('[data-seconds]').textContent =
//         this.addLeadingZero(seconds);
//     }, TIMER_DELAY);
//   },

//   stop() {
//     clearInterval(intervalId);
//     this.intervalId = null;
//     startBtn.disabled = true;
//     calendar.disabled = false;
//   },

//   convertMs(ms) {
//     const second = 1000;
//     const minute = second * 60;
//     const hour = minute * 60;
//     const day = hour * 24;

//     const days = this.addLeadingZero(Math.floor(ms / day));
//     const hours = this.addLeadingZero(Math.floor((ms % day) / hour));
//     const minutes = this.addLeadingZero(
//       Math.floor(((ms % day) % hour) / minute)
//     );
//     const seconds = this.addLeadingZero(
//       Math.floor((((ms % day) % hour) % minute) / second)
//     );

//     return { days, hours, minutes, seconds };
//   },

//   addLeadingZero(value) {
//     return String(value).padStart(2, 0);
//   },
// };
